# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: "swell_models" # replace with the name of the chain
version: "1.0.0"
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: "swell" # replace with the name of the chain

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
docs-paths: ["dbt_packages/fsc_evm/doc_descriptions", "models/doc_descriptions", "models"]

target-path: "target" # directory which will store compiled SQL files
clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"
  - "dbt_packages"

tests:
  swell_models: # replace with the name of the chain
    +store_failures: true # all tests
  fsc_evm:
    +store_failures: true

on-run-start:
  - "{{ fsc_evm.create_sps() }}"
  - "{{ fsc_evm.create_udfs() }}"

on-run-end:
  - '{{ fsc_evm.apply_meta_as_tags(results) }}'

dispatch:
  - macro_namespace: dbt
    search_order:
      - swell-models
      - dbt_snowflake_query_tags
      - dbt

query-comment:
  comment: '{{ dbt_snowflake_query_tags.get_query_comment(node) }}'
  append: true # Snowflake removes prefixed comments.

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

models:
  swell_models: # replace with the name of the chain
    +copy_grants: true
    +persist_docs:
      relation: true
      columns: true
    +on_schema_change: "append_new_columns"
  livequery_models:
    +materialized: ephemeral
  fsc_evm:
    +enabled: false # disable fsc_evm package by default
    +copy_grants: true
    +persist_docs:
      relation: true
      columns: true
    +on_schema_change: "append_new_columns"
    main_package:
      +enabled: false
      core:
        +enabled: true
      github_actions:
        +enabled: true
      labels:
        +enabled: true
      observability:
        +enabled: false
      prices:
        +enabled: true
      utils:
        +enabled: true

vars:
  "dbt_date:time_zone": GMT
  STREAMLINE_INVOKE_STREAMS: False
  STREAMLINE_USE_DEV_FOR_EXTERNAL_TABLES: False
  UPDATE_UDFS_AND_SPS: False
  UPDATE_SNOWFLAKE_TAGS: True
  OBSERV_FULL_TEST: False
  WAIT: 0
  HEAL_MODEL: False
  HEAL_MODELS: []
  START_GHA_TASKS: False

#### STREAMLINE 2.0 BEGIN ####

  API_INTEGRATION: '{{ var("config")[target.name]["API_INTEGRATION"] if var("config")[target.name] else var("config")["dev"]["API_INTEGRATION"] }}'
  EXTERNAL_FUNCTION_URI: '{{ var("config")[target.name]["EXTERNAL_FUNCTION_URI"] if var("config")[target.name] else var("config")["dev"]["EXTERNAL_FUNCTION_URI"] }}'
  ROLES: |
    ["INTERNAL_DEV"]

  config:
  # The keys correspond to dbt profiles and are case sensitive
    dev:
      API_INTEGRATION: AWS_SWELL_API_STG_V2
      EXTERNAL_FUNCTION_URI: jbi9lp4dnf.execute-api.us-east-1.amazonaws.com/stg/
      ROLES:
        - AWS_LAMBDA_SWELL_API # replace with the name of the chain
        - INTERNAL_DEV

    prod:
      API_INTEGRATION: AWS_SWELL_API_PROD_V2
      EXTERNAL_FUNCTION_URI: y7m0kkmyb9.execute-api.us-east-1.amazonaws.com/prod/
      ROLES:
        - AWS_LAMBDA_SWELL_API # replace with the name of the chain
        - INTERNAL_DEV
        - DBT_CLOUD_SWELL # replace with the name of the chain

#### STREAMLINE 2.0 END ####

#### FSC_EVM BEGIN ####

# Please visit https://github.com/FlipsideCrypto/fsc-evm/wiki for more information on required and optional variables

  ### GLOBAL VARIABLES BEGIN ###
  ## REQUIRED
  GLOBAL_PROD_DB_NAME: "swell"
  GLOBAL_NODE_SECRET_PATH: "Vault/prod/swell/ankr/mainnet"
  GLOBAL_BLOCKS_PER_HOUR: 1800

  ### GLOBAL VARIABLES END ###

  BLOCKS_TRANSACTIONS_REALTIME_NEW_BUILD: True
  RECEIPTS_REALTIME_NEW_BUILD: True
  TRACES_REALTIME_NEW_BUILD: True

  BLOCKS_TRANSACTIONS_HISTORY_NEW_BUILD: True
  BLOCKS_TRANSACTIONS_HISTORY_SQL_LIMIT: 1000000
  BLOCKS_TRANSACTIONS_PRODUCER_BATCH_SIZE: 50000
  BLOCKS_TRANSACTIONS_WORKER_BATCH_SIZE: 10000

  RECEIPTS_HISTORY_NEW_BUILD: True
  RECEIPTS_HISTORY_SQL_LIMIT: 1000000
  RECEIPTS_PRODUCER_BATCH_SIZE: 25000
  RECEIPTS_WORKER_BATCH_SIZE: 5000

  TRACES_HISTORY_NEW_BUILD: True
  TRACES_HISTORY_SQL_LIMIT: 1000000
  TRACES_PRODUCER_BATCH_SIZE: 1000
  TRACES_WORKER_BATCH_SIZE: 5000

  CONFIRM_BLOCKS_HISTORY_NEW_BUILD: True
  CONFIRM_BLOCKS_HISTORY_SQL_LIMIT: 2500000
  CONFIRM_BLOCKS_PRODUCER_BATCH_SIZE: 5000
  CONFIRM_BLOCKS_WORKER_BATCH_SIZE: 25000

#### FSC_EVM END ####